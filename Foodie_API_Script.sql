GO
IF NOT EXISTS(SELECT name FROM SYS.DATABASES WHERE [name] = 'Foodie_DB')
BEGIN
    CREATE DATABASE Foodie_DB COLLATE Latin1_general_CI_AI;
END

GO   
USE Foodie_DB


PRINT('-------------- CREATING TABLES --------------')

GO

IF OBJECT_ID('users') IS NULL
BEGIN 
    CREATE TABLE users (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        Name NVARCHAR(200) NOT NULL,
        Phone VARCHAR(12) NOT NULL UNIQUE,
        Email VARCHAR(100) NOT NULL UNIQUE,
        CPF VARCHAR(11) NOT NULL UNIQUE,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
    )
END

GO
IF OBJECT_ID('user_addresses') IS NULL
BEGIN
    CREATE TABLE user_addresses (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        [User_Id] UNIQUEIDENTIFIER NOT NULL,
        [Address] NVARCHAR(300) NOT NULL,
        [Number] VARCHAR(10),
        Address_Complement VARCHAR(50),
        Is_Default BIT NOT NULL DEFAULT 0,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        CONSTRAINT FK_USER_USER_ADDRESS FOREIGN KEY ([User_Id]) REFERENCES users(Id)
    )
END

GO
IF OBJECT_ID('store_types') IS NULL
BEGIN
    CREATE TABLE store_types (
        Id INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        Name VARCHAR(50) NOT NULL,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
    )
END

GO
IF OBJECT_ID('stores') IS NULL
BEGIN
    CREATE TABLE stores (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        Name NVARCHAR(150) NOT NULL,
        Avatar NVARCHAR(150) DEFAULT 'default.png',
        Store_Type_Id INT NOT NULL,
        [Description] NVARCHAR(MAX),
        Order_Min_Value DECIMAL(7,2),
        Open_At TIME NOT NULL,
        Closed_At TIME NOT NULL,
        [Address] NVARCHAR(1000) NOT NULL,
        CNPJ VARCHAR(14) NOT NULL,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        CONSTRAINT FK_STORE_STORE_TYPE_ID FOREIGN KEY (Store_Type_Id) REFERENCES store_types(Id)
    )
END

GO
IF OBJECT_ID('payment_options') IS NULL
BEGIN
    CREATE TABLE payment_options (
        Id INT IDENTITY(1,1) PRIMARY KEY,
        Option_name VARCHAR(50) NOT NULL,
    )
END

GO
IF OBJECT_ID('stores_categories') IS NULL
BEGIN
    CREATE TABLE stores_categories (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        Title VARCHAR(30) NOT NULL,
        Store_Id UNIQUEIDENTIFIER NOT NULL,
        CONSTRAINT FK_STORECATEGORY_STORE FOREIGN KEY (Store_Id) REFERENCES stores(Id),
    )
END


GO
IF OBJECT_ID('products') IS NULL
BEGIN
    CREATE TABLE products (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        Name VARCHAR(150) NOT NULL,
        [Value] DECIMAL(7,2) NOT NULL,
        Store_Id UNIQUEIDENTIFIER NOT NULL,
        [Description] VARCHAR(300) NOT NULL,
        Store_Category_Id UNIQUEIDENTIFIER NOT NULL,
        [Weight] VARCHAR(8),
        People_Served INT,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        CONSTRAINT FK_PRODUCT_STORE FOREIGN KEY (Store_Id) REFERENCES stores(Id),
        CONSTRAINT FK_PRODUCT_STORECATEGORY FOREIGN KEY (Store_Category_Id) REFERENCES stores_categories(Id)
    )
END


GO
IF OBJECT_ID('carts') IS NULL
BEGIN
    CREATE TABLE carts (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        Product_Id UNIQUEIDENTIFIER NOT NULL,
        [User_Id] UNIQUEIDENTIFIER NOT NULL, 
        Product_Amount INT NOT NULL,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,               
        CONSTRAINT FK_CARTS_USERS FOREIGN KEY ([User_Id]) REFERENCES users(Id),
        CONSTRAINT FK_CARTS_PRODUCT FOREIGN KEY (Product_Id) REFERENCES products(Id),
    )
END



GO
IF OBJECT_ID('orders') IS NULL
BEGIN
    CREATE TABLE orders (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        [User_Id] UNIQUEIDENTIFIER NOT NULL,
        Cart_Id UNIQUEIDENTIFIER NOT NULL,
        Paid_At DATETIME,
        Completed_At DATETIME,
        Paid_By_Id INT NOT NULL,
        SubTotal_Value DECIMAL(7,2) NOT NULL,
        Delivery_Fee_Value DECIMAL(7,2) NOT NULL,
        Total_Value DECIMAL(7,2) NOT NULL,
        User_Address_Id UNIQUEIDENTIFIER NOT NULL,
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        CONSTRAINT FK_ORDERS_USERS FOREIGN KEY ([User_Id]) REFERENCES users(Id),
        CONSTRAINT FK_ORDERS_CART FOREIGN KEY (Cart_Id) REFERENCES carts(Id),
        CONSTRAINT FK_ORDERS_PAIDBY FOREIGN KEY (Paid_By_Id) REFERENCES payment_options(Id),
    )
END

GO
IF OBJECT_ID('store_rates') IS NULL
BEGIN
    CREATE TABLE store_rates (
        Id UNIQUEIDENTIFIER PRIMARY KEY,
        Store_Id UNIQUEIDENTIFIER NOT NULL,
        Order_Id UNIQUEIDENTIFIER NOT NULL,
        Stars_Number INT NOT NULL,
        [Description] NVARCHAR(350),
        Created_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        Updated_At DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
        CONSTRAINT FK_STORERATE_STORE FOREIGN KEY (Store_Id) REFERENCES stores(Id),
        CONSTRAINT FK_STORERATE_ORDERS FOREIGN KEY (Order_Id) REFERENCES orders(Id)
    )
END
    

PRINT('-------------- CREATING INDEXES --------------')

CREATE NONCLUSTERED INDEX IDX_STORE_NAME ON stores([Name])
CREATE NONCLUSTERED INDEX IDX_STORE_CNPJ ON stores(CNPJ)

CREATE NONCLUSTERED INDEX IDX_STORECATEGORIES_TITLE ON stores_categories(Title)
CREATE NONCLUSTERED INDEX IDX_STORECATEGORIES_STOREID ON stores_categories(Store_Id)

CREATE NONCLUSTERED INDEX IDX_CARTS_PRODUCTID ON carts(Product_Id)
CREATE NONCLUSTERED INDEX IDX_CARTS_USERID ON carts([User_id])

CREATE NONCLUSTERED INDEX IDX_ORDERS_USERID ON orders([User_id])
CREATE NONCLUSTERED INDEX IDX_ORDERS_CARTID ON orders(Cart_id)

CREATE NONCLUSTERED INDEX IDX_STORERATES_STOREID ON store_rates(Store_Id)
CREATE NONCLUSTERED INDEX IDX_STORERATES_ORDERID ON store_rates(Order_Id)
